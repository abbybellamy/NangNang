{"ast":null,"code":"import React,{useState}from'react';import kanjiText from'./kanji.json';import LearnTut from'../images/LearnpageTut.png';import LearnTut2 from'../images/LearnpageTut2.png';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";console.log(kanjiText);const Learn=()=>{var map=new Map();initializeSet(map);const[formData,setFormData]=useState({kanji:''});const handleSubmit=x=>{x.preventDefault();console.log('Form submitted:',formData);helper(formData,map);};return/*#__PURE__*/_jsxs(\"div\",{className:\"learnContainer\",children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"div\",{class:\"label\",children:\" Learn Kanji : \"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"kanjiInput\",placeholder:\"\\u672C, \\u6642...\",value:formData.kanji,onChange:e=>setFormData({kanji:e.target.value})})]}),/*#__PURE__*/_jsx(\"div\",{id:\"learnHelp\",children:/*#__PURE__*/_jsx(\"img\",{src:LearnTut,alt:\"The basic tutorial of how to read the learn functionality.\"})}),/*#__PURE__*/_jsx(\"div\",{id:\"learnHelp2\",children:/*#__PURE__*/_jsx(\"img\",{src:LearnTut2,alt:\"The basic tutorial of how to use the learn functionality.\"})}),/*#__PURE__*/_jsx(\"div\",{id:\"learnResult\"})]});};const initializeSet=map=>{//https://stackoverflow.com/questions/8877666/how-is-a-javascript-hash-map-implemented \n//hash map ^\nfor(var i in kanjiText){map.set(i,kanjiText[i]);//set up the hash set from kanji.json\n}};const helper=async(formData,map)=>{let wordDes=\"\";const submit=formData.kanji;//console.log(\"this is the submit\" + submit);\nvar element=document.getElementById(\"learnHelp\");var style=window.getComputedStyle(element);if(style.visibility==\"visible\"){element.style.visibility=\"hidden\";}var element=document.getElementById(\"learnHelp2\");var style=window.getComputedStyle(element);if(style.visibility==\"visible\"){element.style.visibility=\"hidden\";}if(map.has(submit)){let outputElement=document.getElementById(\"learnResult\");let word=map.get(submit);//alert(JSON.stringify(res, null, 4));　// checking the type of something from https://stackoverflow.com/questions/1625208/print-content-of-javascript-object\nlet freq=word.rank;let definition=word.def;let position=word.pos;let dissectList=word.dissect;let dissectListT=[];let dissectListA=dissectList.pop();let dissectListB=[];for(let a in dissectListA){dissectListB+=dissectListA[a]+\" \";}for(var x in word.dissect){var listy=word.dissect[x];for(var y in listy){dissectListT+=listy[y]+\" \";}dissectListT+=\"<br>\";}if(position==\"top\"){var top=\"<p id=\\\"radsTop\\\">Dissection Top: \".concat(dissectListT,\"</p>\");var bottom=\"<p id=\\\"radsBot\\\">Dissection Bottom: \".concat(dissectListB,\"</p>\");wordDes+=\"<div id = \\\"learnKanji\\\"> \".concat(submit,\" </div> \\n                        <p><b>Interpretation:</b> \").concat(definition,\"</p>\\n                        <p><b>Frequency:</b> \").concat(freq,\"</p> \\n                        <div id = \\\"top\\\"></div> \").concat(top,\"\\n                        <div id  = \\\"bottom\\\"></div>\").concat(bottom,\" <br />\");}else{var left=\"<p id=\\\"radsL\\\">Dissection Left: \".concat(dissectListT,\"</p>\");var right=\"<p id=\\\"radsR\\\">Dissection Right: \".concat(dissectListB,\"</p>\");wordDes+=\"<div id = \\\"learnKanji\\\"> \".concat(submit,\" </div> \\n                        <p><b>Interpretation:</b> \").concat(definition,\"</p>\\n                        <p><b>Frequency:</b> \").concat(freq,\"</p> \\n                        <div id = \\\"left\\\"></div> \").concat(left,\"\\n                        <div id  = \\\"right\\\"></div>\").concat(right,\" <br />\");}//     wordDes += `\n//     <div id = \"learnKanji\"> ${submit} </div>\n//     <span id = \"kanjiContent\">\n//         <p>Base: ${base}</p> <br>\n//         <p>Rank: ${freq}</p> <br>\n//         <p>Meaning: ${definition}</p><br>\n//         <p id=\"rads\">Dissection: ${dissectList}</p>\n//     </span>\n//    `;\n///API CALL TO GET THE BASIC INFO \nconst options={method:'GET',headers:{'X-RapidAPI-Key':'6a12f8c88cmsh830de894db5186bp10d491jsnfd2c65de1956','X-RapidAPI-Host':'kanjialive-api.p.rapidapi.com'}};const url='https://kanjialive-api.p.rapidapi.com/api/public/kanji/';const uri=url.concat(submit);console.log(url);try{const response=await fetch(uri,options);const result=await response.json();if(!response.ok){let outputElement=document.getElementById(\"learnResult\");let err=\"Please type a valid character.\";outputElement.innerHTML=err;}else{//let outputElement = document.getElementById(\"outputKanji\");\n//let kanji = result.ka_utf; //kanji character\nlet on=result.onyomi_ja;//chinese reading\nlet kun=result.kunyomi_ka_display;// japanese reading\nlet examples=result.examples;//words that it is in \nlet related_words=\" \";//words that it is in \nlet defintion=result.kanji.meaning.english;//english meaning\nlet count=4;for(let word in examples){if(count==0){break;}//I am putting this if statement in because sometimes the \n//use cases of words would start like *kanji it was weird\n//again no documentation so IDK\nif(examples[word].japanese.substring(0,1)===\"*\"){//related_words += examples[word].japanese.substring(1);\n}else{related_words+=\"<br> \";related_words+=examples[word].japanese;related_words+=examples[word].meaning.english;}count--;}wordDes+=\"\\n                    <div id = \\\"apikanji\\\">\\n                        <br />\\n                        <p> <b>Dictionary definition:</b> \".concat(defintion,\"</p>\\n                        <p> <b>On reading:</b> \").concat(on,\"</p>\\n                        <p> <b>Kun reading:</b> \").concat(kun,\"</p>\\n                        <p> <b>Words:</b> \").concat(related_words,\"</p>\\n                    </div>\\n                \");}}catch(error){console.error(error);let outputElement=document.getElementById(\"learnResult\");outputElement.innerHTML=\"This kanji is not one of the top 200\";}outputElement.innerHTML=wordDes;}else{alert(\"Not in base set of top 200. Try another character.\");}};export default Learn;","map":{"version":3,"names":["React","useState","kanjiText","LearnTut","LearnTut2","jsx","_jsx","jsxs","_jsxs","console","log","Learn","map","Map","initializeSet","formData","setFormData","kanji","handleSubmit","x","preventDefault","helper","className","children","onSubmit","class","type","id","placeholder","value","onChange","e","target","src","alt","i","set","wordDes","submit","element","document","getElementById","style","window","getComputedStyle","visibility","has","outputElement","word","get","freq","rank","definition","def","position","pos","dissectList","dissect","dissectListT","dissectListA","pop","dissectListB","a","listy","y","top","concat","bottom","left","right","options","method","headers","url","uri","response","fetch","result","json","ok","err","innerHTML","on","onyomi_ja","kun","kunyomi_ka_display","examples","related_words","defintion","meaning","english","count","japanese","substring","error","alert"],"sources":["/Users/jadielrios/Downloads/NangNang/src/pages/Learn.js"],"sourcesContent":["import React, {useState} from 'react';\nimport kanjiText from './kanji.json';\nimport LearnTut from '../images/LearnpageTut.png';\nimport LearnTut2 from '../images/LearnpageTut2.png';\n\n\nconsole.log(kanjiText);\nconst Learn = () => {\n    var map = new Map();\n    initializeSet(map);\n\n    const [formData, setFormData] = useState({\n        kanji: ''\n    });\n\n    const handleSubmit = (x) => {\n        x.preventDefault();\n        console.log('Form submitted:', formData);\n        helper(formData, map);\n    };\n\n    return (    \n        <div className = \"learnContainer\">\n             <form onSubmit={handleSubmit}>\n                {/* <label htmlFor=\"kanjiInput\"> Enter Kanji : </label> */}\n                <div class=\"label\"> Learn Kanji : </div>\n                <input\n                    type=\"text\"\n                    id=\"kanjiInput\"\n                    placeholder = \"本, 時...\"\n                    value={formData.kanji}\n                    onChange={(e) => setFormData({ kanji: e.target.value })}\n                />\n                {/* <button id = \"kanjiSubmit\" type=\"submit\" name = \"kanjiSubmit\">  \n                </button> */}\n            </form>\n            <div id=\"learnHelp\">\n                <img src={LearnTut} alt=\"The basic tutorial of how to read the learn functionality.\" />\n            </div>\n            <div id=\"learnHelp2\">\n                <img src={LearnTut2} alt=\"The basic tutorial of how to use the learn functionality.\" />\n            </div>\n            <div id=\"learnResult\">\n            </div>\n        </div>\n    );\n}\n\nconst initializeSet = (map) => {\n    //https://stackoverflow.com/questions/8877666/how-is-a-javascript-hash-map-implemented \n    //hash map ^\n    for(var i in kanjiText){\n        map.set(i, kanjiText[i]); //set up the hash set from kanji.json\n    }\n}\n\nconst helper = async(formData, map) => {\n    let wordDes = ``;\n    const submit = formData.kanji;\n    //console.log(\"this is the submit\" + submit);\n    var element = document.getElementById(\"learnHelp\");\n    var style = window.getComputedStyle(element);\n    if (style.visibility == \"visible\") {\n        element.style.visibility = \"hidden\";\n    }\n    var element = document.getElementById(\"learnHelp2\");\n    var style = window.getComputedStyle(element);\n    if (style.visibility == \"visible\") {\n        element.style.visibility = \"hidden\";\n    }\n    if(map.has(submit)){\n\n        let outputElement = document.getElementById(\"learnResult\");\n        let word = map.get(submit);\n        //alert(JSON.stringify(res, null, 4));　// checking the type of something from https://stackoverflow.com/questions/1625208/print-content-of-javascript-object\n        let freq = word.rank;\n        let definition = word.def;\n        let position = word.pos;\n\n\n        let dissectList = word.dissect;\n        let dissectListT = [];\n        let dissectListA = dissectList.pop();\n        let dissectListB = [];\n        for (let a in dissectListA){\n            dissectListB += dissectListA[a] + \" \";\n        }\n        \n        for(var x in word.dissect){\n            var listy = word.dissect[x];\n            for(var y in listy){\n                dissectListT += listy[y] + \" \";\n            }\n            dissectListT += \"<br>\";\n        }  \n\n        if(position == \"top\"){\n            var top = `<p id=\"radsTop\">Dissection Top: ${dissectListT}</p>`;\n            var bottom = `<p id=\"radsBot\">Dissection Bottom: ${dissectListB}</p>`;\n\n            wordDes += `<div id = \"learnKanji\"> ${submit} </div> \n                        <p><b>Interpretation:</b> ${definition}</p>\n                        <p><b>Frequency:</b> ${freq}</p> \n                        <div id = \"top\"></div> ${top}\n                        <div id  = \"bottom\"></div>${bottom} <br />`;\n\n        }\n        else{\n            var left = `<p id=\"radsL\">Dissection Left: ${dissectListT}</p>`;\n            var right = `<p id=\"radsR\">Dissection Right: ${dissectListB}</p>`;\n\n            wordDes += `<div id = \"learnKanji\"> ${submit} </div> \n                        <p><b>Interpretation:</b> ${definition}</p>\n                        <p><b>Frequency:</b> ${freq}</p> \n                        <div id = \"left\"></div> ${left}\n                        <div id  = \"right\"></div>${right} <br />`;\n\n        }\n\n    //     wordDes += `\n    //     <div id = \"learnKanji\"> ${submit} </div>\n    //     <span id = \"kanjiContent\">\n    //         <p>Base: ${base}</p> <br>\n    //         <p>Rank: ${freq}</p> <br>\n    //         <p>Meaning: ${definition}</p><br>\n    //         <p id=\"rads\">Dissection: ${dissectList}</p>\n    //     </span>\n    //    `;\n        ///API CALL TO GET THE BASIC INFO \n\n\n        const options = {\n            method: 'GET',\n            headers: {\n                'X-RapidAPI-Key': '6a12f8c88cmsh830de894db5186bp10d491jsnfd2c65de1956',\n                'X-RapidAPI-Host': 'kanjialive-api.p.rapidapi.com'\n            }\n        };\n\n        const url = 'https://kanjialive-api.p.rapidapi.com/api/public/kanji/'; \n        const uri = url.concat(submit); \n        console.log(url); \n\n        try {\n\n            const response = await fetch(uri, options);\n            const result = await response.json();\n\n            \n            if(!response.ok){\n\n                let outputElement = document.getElementById(\"learnResult\");\n                let err = \"Please type a valid character.\"\n                outputElement.innerHTML = err;\n            }\n\n\n            else{\n\n\n                //let outputElement = document.getElementById(\"outputKanji\");\n                //let kanji = result.ka_utf; //kanji character\n                let on = result.onyomi_ja; //chinese reading\n                let kun = result.kunyomi_ka_display; // japanese reading\n                let examples = result.examples; //words that it is in \n                let related_words = \" \";//words that it is in \n                let defintion = result.kanji.meaning.english; //english meaning\n                let count = 4;\n                for (let word in examples){\n                    if(count == 0){\n                        break;\n                    }\n                    //I am putting this if statement in because sometimes the \n                    //use cases of words would start like *kanji it was weird\n                    //again no documentation so IDK\n                    if(examples[word].japanese.substring(0,1) === \"*\"){\n                        //related_words += examples[word].japanese.substring(1);\n                    }\n                    else{\n                        related_words += \"<br> \";\n                        related_words += examples[word].japanese;\n                        related_words += examples[word].meaning.english;\n                    }\n                    count--;\n                }\n\n                wordDes += `\n                    <div id = \"apikanji\">\n                        <br />\n                        <p> <b>Dictionary definition:</b> ${defintion}</p>\n                        <p> <b>On reading:</b> ${on}</p>\n                        <p> <b>Kun reading:</b> ${kun}</p>\n                        <p> <b>Words:</b> ${related_words}</p>\n                    </div>\n                `;\n            }\n\n\n        }\n\n        catch (error) {\n\n            console.error(error);\n            let outputElement = document.getElementById(\"learnResult\");\n            outputElement.innerHTML = \"This kanji is not one of the top 200\";\n\n\n        }\n        outputElement.innerHTML = wordDes;\n    } \n\n\n    else{\n        alert(\"Not in base set of top 200. Try another character.\");\n    }\n}\nexport default Learn;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAGC,QAAQ,KAAO,OAAO,CACrC,MAAO,CAAAC,SAAS,KAAM,cAAc,CACpC,MAAO,CAAAC,QAAQ,KAAM,4BAA4B,CACjD,MAAO,CAAAC,SAAS,KAAM,6BAA6B,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAGpDC,OAAO,CAACC,GAAG,CAACR,SAAS,CAAC,CACtB,KAAM,CAAAS,KAAK,CAAGA,CAAA,GAAM,CAChB,GAAI,CAAAC,GAAG,CAAG,GAAI,CAAAC,GAAG,CAAC,CAAC,CACnBC,aAAa,CAACF,GAAG,CAAC,CAElB,KAAM,CAACG,QAAQ,CAAEC,WAAW,CAAC,CAAGf,QAAQ,CAAC,CACrCgB,KAAK,CAAE,EACX,CAAC,CAAC,CAEF,KAAM,CAAAC,YAAY,CAAIC,CAAC,EAAK,CACxBA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClBX,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAEK,QAAQ,CAAC,CACxCM,MAAM,CAACN,QAAQ,CAAEH,GAAG,CAAC,CACzB,CAAC,CAED,mBACIJ,KAAA,QAAKc,SAAS,CAAG,gBAAgB,CAAAC,QAAA,eAC5Bf,KAAA,SAAMgB,QAAQ,CAAEN,YAAa,CAAAK,QAAA,eAE1BjB,IAAA,QAAKmB,KAAK,CAAC,OAAO,CAAAF,QAAA,CAAC,iBAAe,CAAK,CAAC,cACxCjB,IAAA,UACIoB,IAAI,CAAC,MAAM,CACXC,EAAE,CAAC,YAAY,CACfC,WAAW,CAAG,mBAAS,CACvBC,KAAK,CAAEd,QAAQ,CAACE,KAAM,CACtBa,QAAQ,CAAGC,CAAC,EAAKf,WAAW,CAAC,CAAEC,KAAK,CAAEc,CAAC,CAACC,MAAM,CAACH,KAAM,CAAC,CAAE,CAC3D,CAAC,EAGA,CAAC,cACPvB,IAAA,QAAKqB,EAAE,CAAC,WAAW,CAAAJ,QAAA,cACfjB,IAAA,QAAK2B,GAAG,CAAE9B,QAAS,CAAC+B,GAAG,CAAC,4DAA4D,CAAE,CAAC,CACtF,CAAC,cACN5B,IAAA,QAAKqB,EAAE,CAAC,YAAY,CAAAJ,QAAA,cAChBjB,IAAA,QAAK2B,GAAG,CAAE7B,SAAU,CAAC8B,GAAG,CAAC,2DAA2D,CAAE,CAAC,CACtF,CAAC,cACN5B,IAAA,QAAKqB,EAAE,CAAC,aAAa,CAChB,CAAC,EACL,CAAC,CAEd,CAAC,CAED,KAAM,CAAAb,aAAa,CAAIF,GAAG,EAAK,CAC3B;AACA;AACA,IAAI,GAAI,CAAAuB,CAAC,GAAI,CAAAjC,SAAS,CAAC,CACnBU,GAAG,CAACwB,GAAG,CAACD,CAAC,CAAEjC,SAAS,CAACiC,CAAC,CAAC,CAAC,CAAE;AAC9B,CACJ,CAAC,CAED,KAAM,CAAAd,MAAM,CAAG,KAAAA,CAAMN,QAAQ,CAAEH,GAAG,GAAK,CACnC,GAAI,CAAAyB,OAAO,GAAK,CAChB,KAAM,CAAAC,MAAM,CAAGvB,QAAQ,CAACE,KAAK,CAC7B;AACA,GAAI,CAAAsB,OAAO,CAAGC,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,CAClD,GAAI,CAAAC,KAAK,CAAGC,MAAM,CAACC,gBAAgB,CAACL,OAAO,CAAC,CAC5C,GAAIG,KAAK,CAACG,UAAU,EAAI,SAAS,CAAE,CAC/BN,OAAO,CAACG,KAAK,CAACG,UAAU,CAAG,QAAQ,CACvC,CACA,GAAI,CAAAN,OAAO,CAAGC,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC,CACnD,GAAI,CAAAC,KAAK,CAAGC,MAAM,CAACC,gBAAgB,CAACL,OAAO,CAAC,CAC5C,GAAIG,KAAK,CAACG,UAAU,EAAI,SAAS,CAAE,CAC/BN,OAAO,CAACG,KAAK,CAACG,UAAU,CAAG,QAAQ,CACvC,CACA,GAAGjC,GAAG,CAACkC,GAAG,CAACR,MAAM,CAAC,CAAC,CAEf,GAAI,CAAAS,aAAa,CAAGP,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC,CAC1D,GAAI,CAAAO,IAAI,CAAGpC,GAAG,CAACqC,GAAG,CAACX,MAAM,CAAC,CAC1B;AACA,GAAI,CAAAY,IAAI,CAAGF,IAAI,CAACG,IAAI,CACpB,GAAI,CAAAC,UAAU,CAAGJ,IAAI,CAACK,GAAG,CACzB,GAAI,CAAAC,QAAQ,CAAGN,IAAI,CAACO,GAAG,CAGvB,GAAI,CAAAC,WAAW,CAAGR,IAAI,CAACS,OAAO,CAC9B,GAAI,CAAAC,YAAY,CAAG,EAAE,CACrB,GAAI,CAAAC,YAAY,CAAGH,WAAW,CAACI,GAAG,CAAC,CAAC,CACpC,GAAI,CAAAC,YAAY,CAAG,EAAE,CACrB,IAAK,GAAI,CAAAC,CAAC,GAAI,CAAAH,YAAY,CAAC,CACvBE,YAAY,EAAIF,YAAY,CAACG,CAAC,CAAC,CAAG,GAAG,CACzC,CAEA,IAAI,GAAI,CAAA3C,CAAC,GAAI,CAAA6B,IAAI,CAACS,OAAO,CAAC,CACtB,GAAI,CAAAM,KAAK,CAAGf,IAAI,CAACS,OAAO,CAACtC,CAAC,CAAC,CAC3B,IAAI,GAAI,CAAA6C,CAAC,GAAI,CAAAD,KAAK,CAAC,CACfL,YAAY,EAAIK,KAAK,CAACC,CAAC,CAAC,CAAG,GAAG,CAClC,CACAN,YAAY,EAAI,MAAM,CAC1B,CAEA,GAAGJ,QAAQ,EAAI,KAAK,CAAC,CACjB,GAAI,CAAAW,GAAG,sCAAAC,MAAA,CAAsCR,YAAY,QAAM,CAC/D,GAAI,CAAAS,MAAM,yCAAAD,MAAA,CAAyCL,YAAY,QAAM,CAErExB,OAAO,+BAAA6B,MAAA,CAA+B5B,MAAM,iEAAA4B,MAAA,CACJd,UAAU,wDAAAc,MAAA,CACfhB,IAAI,6DAAAgB,MAAA,CACFD,GAAG,2DAAAC,MAAA,CACAC,MAAM,WAAS,CAE3D,CAAC,IACG,CACA,GAAI,CAAAC,IAAI,qCAAAF,MAAA,CAAqCR,YAAY,QAAM,CAC/D,GAAI,CAAAW,KAAK,sCAAAH,MAAA,CAAsCL,YAAY,QAAM,CAEjExB,OAAO,+BAAA6B,MAAA,CAA+B5B,MAAM,iEAAA4B,MAAA,CACJd,UAAU,wDAAAc,MAAA,CACfhB,IAAI,8DAAAgB,MAAA,CACDE,IAAI,0DAAAF,MAAA,CACHG,KAAK,WAAS,CAEzD,CAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AAGA,KAAM,CAAAC,OAAO,CAAG,CACZC,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACL,gBAAgB,CAAE,oDAAoD,CACtE,iBAAiB,CAAE,+BACvB,CACJ,CAAC,CAED,KAAM,CAAAC,GAAG,CAAG,yDAAyD,CACrE,KAAM,CAAAC,GAAG,CAAGD,GAAG,CAACP,MAAM,CAAC5B,MAAM,CAAC,CAC9B7B,OAAO,CAACC,GAAG,CAAC+D,GAAG,CAAC,CAEhB,GAAI,CAEA,KAAM,CAAAE,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAACF,GAAG,CAAEJ,OAAO,CAAC,CAC1C,KAAM,CAAAO,MAAM,CAAG,KAAM,CAAAF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAGpC,GAAG,CAACH,QAAQ,CAACI,EAAE,CAAC,CAEZ,GAAI,CAAAhC,aAAa,CAAGP,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC,CAC1D,GAAI,CAAAuC,GAAG,CAAG,gCAAgC,CAC1CjC,aAAa,CAACkC,SAAS,CAAGD,GAAG,CACjC,CAAC,IAGG,CAGA;AACA;AACA,GAAI,CAAAE,EAAE,CAAGL,MAAM,CAACM,SAAS,CAAE;AAC3B,GAAI,CAAAC,GAAG,CAAGP,MAAM,CAACQ,kBAAkB,CAAE;AACrC,GAAI,CAAAC,QAAQ,CAAGT,MAAM,CAACS,QAAQ,CAAE;AAChC,GAAI,CAAAC,aAAa,CAAG,GAAG,CAAC;AACxB,GAAI,CAAAC,SAAS,CAAGX,MAAM,CAAC5D,KAAK,CAACwE,OAAO,CAACC,OAAO,CAAE;AAC9C,GAAI,CAAAC,KAAK,CAAG,CAAC,CACb,IAAK,GAAI,CAAA3C,IAAI,GAAI,CAAAsC,QAAQ,CAAC,CACtB,GAAGK,KAAK,EAAI,CAAC,CAAC,CACV,MACJ,CACA;AACA;AACA;AACA,GAAGL,QAAQ,CAACtC,IAAI,CAAC,CAAC4C,QAAQ,CAACC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,GAAK,GAAG,CAAC,CAC9C;AAAA,CACH,IACG,CACAN,aAAa,EAAI,OAAO,CACxBA,aAAa,EAAID,QAAQ,CAACtC,IAAI,CAAC,CAAC4C,QAAQ,CACxCL,aAAa,EAAID,QAAQ,CAACtC,IAAI,CAAC,CAACyC,OAAO,CAACC,OAAO,CACnD,CACAC,KAAK,EAAE,CACX,CAEAtD,OAAO,8IAAA6B,MAAA,CAGqCsB,SAAS,0DAAAtB,MAAA,CACpBgB,EAAE,2DAAAhB,MAAA,CACDkB,GAAG,qDAAAlB,MAAA,CACTqB,aAAa,sDAExC,CACL,CAGJ,CAEA,MAAOO,KAAK,CAAE,CAEVrF,OAAO,CAACqF,KAAK,CAACA,KAAK,CAAC,CACpB,GAAI,CAAA/C,aAAa,CAAGP,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC,CAC1DM,aAAa,CAACkC,SAAS,CAAG,sCAAsC,CAGpE,CACAlC,aAAa,CAACkC,SAAS,CAAG5C,OAAO,CACrC,CAAC,IAGG,CACA0D,KAAK,CAAC,oDAAoD,CAAC,CAC/D,CACJ,CAAC,CACD,cAAe,CAAApF,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}