{"ast":null,"code":"var _jsxFileName = \"/Users/abbybellamy/Desktop/JWAD/dojo-blog/src/pages/Dictionary.js\";\n//import Header from '../components/Header';\nimport React, { useState, useEffect } from 'react';\n//import me from '../images/me.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dictionary = () => {\n  Search();\n  process();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dictonaryContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"body\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"output\",\n        children: /*#__PURE__*/_jsxDEV(\"script\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n_c = Dictionary;\nconst Search = () => {};\n_c2 = Search;\nconst process = async () => {\n  const options = {\n    method: 'GET',\n    headers: {\n      'X-RapidAPI-Key': '6a12f8c88cmsh830de894db5186bp10d491jsnfd2c65de1956',\n      'X-RapidAPI-Host': 'kanjialive-api.p.rapidapi.com'\n    }\n  };\n  const url = 'https://kanjialive-api.p.rapidapi.com/api/public/kanji/';\n  const uri = url.concat('木'); //%E4%BC%91';\n  console.log(url);\n  //const encoded = encodeURI(url);\n  try {\n    const response = await fetch(uri, options);\n    const result = await response.json();\n    var outputElement = document.getElementById(\"output\");\n    var kanji = result.ka_utf; //kanji character\n    var on = result.onyomi_ja; //chinese reading\n    var kun = result.kunyomi_ka_display; // japanese reading\n    var examples = result.examples; //words that it is in \n    var jpn_word = \" \";\n    var eng_word = \" \";\n    for (var word in examples) {\n      //console.log(word + \": \" + examples[word].japanese);\n      jpn_word += examples[word].japanese;\n      eng_word += [examples[word].english].meaning;\n    }\n    var wordDes = kanji + on + kun + jpn_word + eng_word;\n    outputElement.innerHTML = wordDes;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport default Dictionary;\nvar _c, _c2;\n$RefreshReg$(_c, \"Dictionary\");\n$RefreshReg$(_c2, \"Search\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Dictionary","Search","process","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","_c2","options","method","headers","url","uri","concat","console","log","response","fetch","result","json","outputElement","document","getElementById","kanji","ka_utf","on","onyomi_ja","kun","kunyomi_ka_display","examples","jpn_word","eng_word","word","japanese","english","meaning","wordDes","innerHTML","error","$RefreshReg$"],"sources":["/Users/abbybellamy/Desktop/JWAD/dojo-blog/src/pages/Dictionary.js"],"sourcesContent":["//import Header from '../components/Header';\nimport React, {useState, useEffect} from 'react';\n//import me from '../images/me.png';\n\n\nconst Dictionary = () => {\n    Search();\n    process();\n    return (    \n        <div className = \"dictonaryContainer\">\n            <body>\n                <div id=\"output\">\n                    <script>\n                        \n                    </script>\n                </div>\n            </body>\n        </div>\n    );\n}\n\nconst Search = () => {\n\n}\n\nconst process = async() => {\n    const options = {\n    method: 'GET',\n    headers: {\n        'X-RapidAPI-Key': '6a12f8c88cmsh830de894db5186bp10d491jsnfd2c65de1956',\n        'X-RapidAPI-Host': 'kanjialive-api.p.rapidapi.com'\n    }\n    };\n\n    const url = 'https://kanjialive-api.p.rapidapi.com/api/public/kanji/'; \n    const uri = url.concat('木'); //%E4%BC%91';\n    console.log(url);\n    //const encoded = encodeURI(url);\n    try {\n        const response = await fetch(uri, options);\n        const result = await response.json();\n        var outputElement = document.getElementById(\"output\");\n\n        var kanji = result.ka_utf; //kanji character\n        var on = result.onyomi_ja; //chinese reading\n        var kun = result.kunyomi_ka_display; // japanese reading\n        var examples = result.examples; //words that it is in \n        var jpn_word = \" \";\n        var eng_word = \" \";\n        for (var word in examples){\n            //console.log(word + \": \" + examples[word].japanese);\n            jpn_word += examples[word].japanese;\n            eng_word += [examples[word].english].meaning;\n        }\n        var wordDes = kanji + on + kun + jpn_word + eng_word;\n\n        outputElement.innerHTML = wordDes;\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nexport default Dictionary;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGA,MAAMC,UAAU,GAAGA,CAAA,KAAM;EACrBC,MAAM,CAAC,CAAC;EACRC,OAAO,CAAC,CAAC;EACT,oBACIH,OAAA;IAAKI,SAAS,EAAG,oBAAoB;IAAAC,QAAA,eACjCL,OAAA;MAAAK,QAAA,eACIL,OAAA;QAAKM,EAAE,EAAC,QAAQ;QAAAD,QAAA,eACZL,OAAA;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAAAC,EAAA,GAdKV,UAAU;AAgBhB,MAAMC,MAAM,GAAGA,CAAA,KAAM,CAErB,CAAC;AAAAU,GAAA,GAFKV,MAAM;AAIZ,MAAMC,OAAO,GAAG,MAAAA,CAAA,KAAW;EACvB,MAAMU,OAAO,GAAG;IAChBC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACL,gBAAgB,EAAE,oDAAoD;MACtE,iBAAiB,EAAE;IACvB;EACA,CAAC;EAED,MAAMC,GAAG,GAAG,yDAAyD;EACrE,MAAMC,GAAG,GAAGD,GAAG,CAACE,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;EAC7BC,OAAO,CAACC,GAAG,CAACJ,GAAG,CAAC;EAChB;EACA,IAAI;IACA,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAG,EAAEJ,OAAO,CAAC;IAC1C,MAAMU,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACpC,IAAIC,aAAa,GAAGC,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAC;IAErD,IAAIC,KAAK,GAAGL,MAAM,CAACM,MAAM,CAAC,CAAC;IAC3B,IAAIC,EAAE,GAAGP,MAAM,CAACQ,SAAS,CAAC,CAAC;IAC3B,IAAIC,GAAG,GAAGT,MAAM,CAACU,kBAAkB,CAAC,CAAC;IACrC,IAAIC,QAAQ,GAAGX,MAAM,CAACW,QAAQ,CAAC,CAAC;IAChC,IAAIC,QAAQ,GAAG,GAAG;IAClB,IAAIC,QAAQ,GAAG,GAAG;IAClB,KAAK,IAAIC,IAAI,IAAIH,QAAQ,EAAC;MACtB;MACAC,QAAQ,IAAID,QAAQ,CAACG,IAAI,CAAC,CAACC,QAAQ;MACnCF,QAAQ,IAAI,CAACF,QAAQ,CAACG,IAAI,CAAC,CAACE,OAAO,CAAC,CAACC,OAAO;IAChD;IACA,IAAIC,OAAO,GAAGb,KAAK,GAAGE,EAAE,GAAGE,GAAG,GAAGG,QAAQ,GAAGC,QAAQ;IAEpDX,aAAa,CAACiB,SAAS,GAAGD,OAAO;EACrC,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZxB,OAAO,CAACwB,KAAK,CAACA,KAAK,CAAC;EACxB;AACJ,CAAC;AAED,eAAe1C,UAAU;AAAC,IAAAU,EAAA,EAAAC,GAAA;AAAAgC,YAAA,CAAAjC,EAAA;AAAAiC,YAAA,CAAAhC,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}