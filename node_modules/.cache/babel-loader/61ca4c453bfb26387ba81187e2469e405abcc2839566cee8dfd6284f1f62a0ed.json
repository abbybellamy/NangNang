{"ast":null,"code":"var _jsxFileName = \"/Users/abbybellamy/Desktop/JWAD/dojo-blog/src/pages/Learn.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport kanjiText from './kanji.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconsole.log(kanjiText);\nconst About = () => {\n  _s();\n  initializeSet();\n  const [formData, setFormData] = useState({\n    kanji: ''\n  });\n  const handleSubmit = x => {\n    x.preventDefault();\n    console.log('Form submitted:', formData);\n    helper(formData, map);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"about\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"kanjiInput\",\n        children: \" Enter Kanji : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"kanjiInput\",\n        value: formData.kanji,\n        onChange: e => setFormData({\n          kanji: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \" Search \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"learnResult\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n_s(About, \"7EBMU1XXTAMHPtl/YVUZivfxL5w=\");\n_c = About;\nconst initializeSet = () => {\n  //https://stackoverflow.com/questions/8877666/how-is-a-javascript-hash-map-implemented \n  //hash map ^\n  var map = new Map([]);\n  // map[\"本\"] = \"木 'tree' , 一 'cut through'\";\n  for (var i in kanjiText) {\n    //set up the hash set from kanji.json\n    map.set(i, kanjiText.i);\n  }\n  console.log(kanjiText);\n};\nconst helper = async (formData, map) => {\n  const submit = formData.kanji;\n\n  //get from txt file \n  console.log(\"this is the submit\" + submit);\n  if (submit in map) {\n    let outputElement = document.getElementById(\"output\");\n\n    // let wordDes = ;\n    // outputElement.innerHTML = wordDes;\n  } else {\n    console.log(\"Not in base set\");\n  }\n  //store in the cache  \n};\nexport default About;\nvar _c;\n$RefreshReg$(_c, \"About\");","map":{"version":3,"names":["React","useState","kanjiText","jsxDEV","_jsxDEV","console","log","About","_s","initializeSet","formData","setFormData","kanji","handleSubmit","x","preventDefault","helper","map","className","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","value","onChange","e","target","_c","Map","i","set","submit","outputElement","document","getElementById","$RefreshReg$"],"sources":["/Users/abbybellamy/Desktop/JWAD/dojo-blog/src/pages/Learn.js"],"sourcesContent":["import React, {useState} from 'react';\nimport kanjiText from './kanji.json';\n\nconsole.log(kanjiText);\nconst About = () => {\n\n    initializeSet();\n    const [formData, setFormData] = useState({\n        kanji: ''\n    });\n\n    const handleSubmit = (x) => {\n        x.preventDefault();\n        console.log('Form submitted:', formData);\n        helper(formData, map);\n    };\n    return (    \n        <div className = \"about\">\n             <form onSubmit={handleSubmit}>\n                <label htmlFor=\"kanjiInput\"> Enter Kanji : </label>\n                <input\n                    type=\"text\"\n                    id=\"kanjiInput\"\n                    value={formData.kanji}\n                    onChange={(e) => setFormData({ kanji: e.target.value })}\n                />\n                <button type=\"submit\"> Search </button>\n            </form>\n            <div id=\"learnResult\">\n            </div>\n        </div>\n    );\n}\n\nconst initializeSet = () => {\n    //https://stackoverflow.com/questions/8877666/how-is-a-javascript-hash-map-implemented \n    //hash map ^\n    var map = new Map([]);\n    // map[\"本\"] = \"木 'tree' , 一 'cut through'\";\n    for(var i in kanjiText){\n        //set up the hash set from kanji.json\n        map.set(i, kanjiText.i);\n    }\n    console.log(kanjiText);\n}\n\nconst helper = async(formData, map) => {\n    const submit = formData.kanji;\n\n    //get from txt file \n    console.log(\"this is the submit\" + submit);\n\n    if(submit in map){\n        let outputElement = document.getElementById(\"output\");\n\n\n        // let wordDes = ;\n        // outputElement.innerHTML = wordDes;\n    } \n    else{\n        console.log(\"Not in base set\");\n    }\n    //store in the cache  \n}\nexport default About;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,SAAS,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErCC,OAAO,CAACC,GAAG,CAACJ,SAAS,CAAC;AACtB,MAAMK,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEhBC,aAAa,CAAC,CAAC;EACf,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC;IACrCW,KAAK,EAAE;EACX,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAIC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBV,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEI,QAAQ,CAAC;IACxCM,MAAM,CAACN,QAAQ,EAAEO,GAAG,CAAC;EACzB,CAAC;EACD,oBACIb,OAAA;IAAKc,SAAS,EAAG,OAAO;IAAAC,QAAA,gBACnBf,OAAA;MAAMgB,QAAQ,EAAEP,YAAa;MAAAM,QAAA,gBAC1Bf,OAAA;QAAOiB,OAAO,EAAC,YAAY;QAAAF,QAAA,EAAC;MAAe;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACnDrB,OAAA;QACIsB,IAAI,EAAC,MAAM;QACXC,EAAE,EAAC,YAAY;QACfC,KAAK,EAAElB,QAAQ,CAACE,KAAM;QACtBiB,QAAQ,EAAGC,CAAC,IAAKnB,WAAW,CAAC;UAAEC,KAAK,EAAEkB,CAAC,CAACC,MAAM,CAACH;QAAM,CAAC;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3D,CAAC,eACFrB,OAAA;QAAQsB,IAAI,EAAC,QAAQ;QAAAP,QAAA,EAAC;MAAQ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC,eACPrB,OAAA;MAAKuB,EAAE,EAAC;IAAa;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAAjB,EAAA,CA5BKD,KAAK;AAAAyB,EAAA,GAALzB,KAAK;AA8BX,MAAME,aAAa,GAAGA,CAAA,KAAM;EACxB;EACA;EACA,IAAIQ,GAAG,GAAG,IAAIgB,GAAG,CAAC,EAAE,CAAC;EACrB;EACA,KAAI,IAAIC,CAAC,IAAIhC,SAAS,EAAC;IACnB;IACAe,GAAG,CAACkB,GAAG,CAACD,CAAC,EAAEhC,SAAS,CAACgC,CAAC,CAAC;EAC3B;EACA7B,OAAO,CAACC,GAAG,CAACJ,SAAS,CAAC;AAC1B,CAAC;AAED,MAAMc,MAAM,GAAG,MAAAA,CAAMN,QAAQ,EAAEO,GAAG,KAAK;EACnC,MAAMmB,MAAM,GAAG1B,QAAQ,CAACE,KAAK;;EAE7B;EACAP,OAAO,CAACC,GAAG,CAAC,oBAAoB,GAAG8B,MAAM,CAAC;EAE1C,IAAGA,MAAM,IAAInB,GAAG,EAAC;IACb,IAAIoB,aAAa,GAAGC,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAC;;IAGrD;IACA;EACJ,CAAC,MACG;IACAlC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;EAClC;EACA;AACJ,CAAC;AACD,eAAeC,KAAK;AAAC,IAAAyB,EAAA;AAAAQ,YAAA,CAAAR,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}