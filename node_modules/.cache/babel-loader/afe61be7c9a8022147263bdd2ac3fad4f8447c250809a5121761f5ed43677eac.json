{"ast":null,"code":"var _jsxFileName = \"/Users/abbybellamy/Desktop/JWAD/dojo-blog/src/pages/Learn.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport kanjiText from './kanji.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconsole.log(kanjiText);\nconst About = () => {\n  _s();\n  //initializeSet();\n  const [formData, setFormData] = useState({\n    kanji: ''\n  });\n  const handleSubmit = x => {\n    x.preventDefault();\n    console.log('Form submitted:', formData);\n    helper(formData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"about\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"kanjiInput\",\n        children: \" Enter Kanji : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"kanjiInput\",\n        value: formData.kanji,\n        onChange: e => setFormData({\n          kanji: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \" Search \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"learnResult\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n// const initializeSet = () => {\n//     //https://stackoverflow.com/questions/8877666/how-is-a-javascript-hash-map-implemented \n//     //hash map ^\n//     var map = new Map([]);\n//     // map[\"本\"] = \"木 'tree' , 一 'cut through'\";\n//     for(var i in kanjiText){\n//         //set up the hash set from kanji.json\n//         map.set(i, kanjiText.i);\n//     }\n//     console.log(kanjiText);\n// }\n_s(About, \"7EBMU1XXTAMHPtl/YVUZivfxL5w=\");\n_c = About;\nconst helper = async formData => {\n  const submit = formData.kanji;\n\n  //get from txt file \n  console.log(\"this is the submit\" + submit);\n  // Load the JSON file\n  let json = File.ReadAllText(\"your_json_file.json\");\n  let data = json.parse();\n  console.log(data[本]);\n  if (data[submit] != \"\") {\n    let outputElement = document.getElementById(\"output\");\n\n    // let wordDes = ;\n    // outputElement.innerHTML = wordDes;\n  } else {\n    console.log(\"Not in base set\");\n  }\n  //store in the cache  \n};\nexport default About;\nvar _c;\n$RefreshReg$(_c, \"About\");","map":{"version":3,"names":["React","useState","kanjiText","jsxDEV","_jsxDEV","console","log","About","_s","formData","setFormData","kanji","handleSubmit","x","preventDefault","helper","className","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","value","onChange","e","target","_c","submit","json","File","ReadAllText","data","parse","本","outputElement","document","getElementById","$RefreshReg$"],"sources":["/Users/abbybellamy/Desktop/JWAD/dojo-blog/src/pages/Learn.js"],"sourcesContent":["import React, {useState} from 'react';\nimport kanjiText from './kanji.json';\n\nconsole.log(kanjiText);\nconst About = () => {\n\n    //initializeSet();\n    const [formData, setFormData] = useState({\n        kanji: ''\n    });\n\n    const handleSubmit = (x) => {\n        x.preventDefault();\n        console.log('Form submitted:', formData);\n        helper(formData);\n    };\n    return (    \n        <div className = \"about\">\n             <form onSubmit={handleSubmit}>\n                <label htmlFor=\"kanjiInput\"> Enter Kanji : </label>\n                <input\n                    type=\"text\"\n                    id=\"kanjiInput\"\n                    value={formData.kanji}\n                    onChange={(e) => setFormData({ kanji: e.target.value })}\n                />\n                <button type=\"submit\"> Search </button>\n            </form>\n            <div id=\"learnResult\">\n            </div>\n        </div>\n    );\n}\n\n// const initializeSet = () => {\n//     //https://stackoverflow.com/questions/8877666/how-is-a-javascript-hash-map-implemented \n//     //hash map ^\n//     var map = new Map([]);\n//     // map[\"本\"] = \"木 'tree' , 一 'cut through'\";\n//     for(var i in kanjiText){\n//         //set up the hash set from kanji.json\n//         map.set(i, kanjiText.i);\n//     }\n//     console.log(kanjiText);\n// }\n\nconst helper = async(formData) => {\n    const submit = formData.kanji;\n\n    //get from txt file \n    console.log(\"this is the submit\" + submit);\n    // Load the JSON file\n    let json = File.ReadAllText(\"your_json_file.json\");\n    let data = json.parse();\n    console.log(data[本]);\n    if(data[submit] != \"\"){\n        let outputElement = document.getElementById(\"output\");\n\n\n        // let wordDes = ;\n        // outputElement.innerHTML = wordDes;\n    } \n    else{\n        console.log(\"Not in base set\");\n    }\n    //store in the cache  \n}\nexport default About;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,SAAS,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErCC,OAAO,CAACC,GAAG,CAACJ,SAAS,CAAC;AACtB,MAAMK,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEhB;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC;IACrCU,KAAK,EAAE;EACX,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAIC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBT,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEG,QAAQ,CAAC;IACxCM,MAAM,CAACN,QAAQ,CAAC;EACpB,CAAC;EACD,oBACIL,OAAA;IAAKY,SAAS,EAAG,OAAO;IAAAC,QAAA,gBACnBb,OAAA;MAAMc,QAAQ,EAAEN,YAAa;MAAAK,QAAA,gBAC1Bb,OAAA;QAAOe,OAAO,EAAC,YAAY;QAAAF,QAAA,EAAC;MAAe;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACnDnB,OAAA;QACIoB,IAAI,EAAC,MAAM;QACXC,EAAE,EAAC,YAAY;QACfC,KAAK,EAAEjB,QAAQ,CAACE,KAAM;QACtBgB,QAAQ,EAAGC,CAAC,IAAKlB,WAAW,CAAC;UAAEC,KAAK,EAAEiB,CAAC,CAACC,MAAM,CAACH;QAAM,CAAC;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3D,CAAC,eACFnB,OAAA;QAAQoB,IAAI,EAAC,QAAQ;QAAAP,QAAA,EAAC;MAAQ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC,eACPnB,OAAA;MAAKqB,EAAE,EAAC;IAAa;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAf,EAAA,CAxCMD,KAAK;AAAAuB,EAAA,GAALvB,KAAK;AA0CX,MAAMQ,MAAM,GAAG,MAAMN,QAAQ,IAAK;EAC9B,MAAMsB,MAAM,GAAGtB,QAAQ,CAACE,KAAK;;EAE7B;EACAN,OAAO,CAACC,GAAG,CAAC,oBAAoB,GAAGyB,MAAM,CAAC;EAC1C;EACA,IAAIC,IAAI,GAAGC,IAAI,CAACC,WAAW,CAAC,qBAAqB,CAAC;EAClD,IAAIC,IAAI,GAAGH,IAAI,CAACI,KAAK,CAAC,CAAC;EACvB/B,OAAO,CAACC,GAAG,CAAC6B,IAAI,CAACE,CAAC,CAAC,CAAC;EACpB,IAAGF,IAAI,CAACJ,MAAM,CAAC,IAAI,EAAE,EAAC;IAClB,IAAIO,aAAa,GAAGC,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAC;;IAGrD;IACA;EACJ,CAAC,MACG;IACAnC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;EAClC;EACA;AACJ,CAAC;AACD,eAAeC,KAAK;AAAC,IAAAuB,EAAA;AAAAW,YAAA,CAAAX,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}