{"ast":null,"code":"var _jsxFileName = \"/Users/abbybellamy/Desktop/JWAD/dojo-blog/src/pages/Learn.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst About = () => {\n  _s();\n  var map = {};\n  map[\"本\"] = \"木 'tree' , 一 'cut through'\";\n  const [formData, setFormData] = useState({\n    kanji: ''\n  });\n  const handleSubmit = x => {\n    x.preventDefault();\n    console.log('Form submitted:', formData);\n    helper(formData, map);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"about\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"kanjiInput\",\n        children: \" Enter Kanji : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"kanjiInput\",\n        value: formData.kanji,\n        onChange: e => setFormData({\n          kanji: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \" Search \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 14\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n_s(About, \"7EBMU1XXTAMHPtl/YVUZivfxL5w=\");\n_c = About;\nconst initializeSet = () => {\n  //https://stackoverflow.com/questions/8877666/how-is-a-javascript-hash-map-implemented \n  //hash map ^\n  var map = {};\n  map[\"本\"] = \"木 'tree' , 一 'cut through'\";\n  // for(var i = 0; i < 200; i++){\n  //     //set up the hash set from kanji.txt\n  // }\n};\nconst helper = (formData, map) => {\n  const submit = formData.kanji;\n  //get from txt file \n  if (submit in map) {\n    //call API on that kanji\n    console.log(map[submit]);\n    //print stuff to html\n  } else {\n    console.log(\"Not in base set\");\n  }\n  //store in the cache  \n};\nexport default About;\nvar _c;\n$RefreshReg$(_c, \"About\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","About","_s","map","formData","setFormData","kanji","handleSubmit","x","preventDefault","console","log","helper","className","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","value","onChange","e","target","_c","initializeSet","submit","$RefreshReg$"],"sources":["/Users/abbybellamy/Desktop/JWAD/dojo-blog/src/pages/Learn.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\n\n\nconst About = () => {\n    var map = {};\n    map[\"本\"] = \"木 'tree' , 一 'cut through'\";\n\n    const [formData, setFormData] = useState({\n        kanji: ''\n    });\n    \n    const handleSubmit = (x) => {\n        x.preventDefault();\n        console.log('Form submitted:', formData);\n        helper(formData, map);\n    };\n    return (    \n        <div className = \"about\">\n             <form onSubmit={handleSubmit}>\n                <label htmlFor=\"kanjiInput\"> Enter Kanji : </label>\n                <input\n                    type=\"text\"\n                    id=\"kanjiInput\"\n                    value={formData.kanji}\n                    onChange={(e) => setFormData({ kanji: e.target.value })}\n                />\n                <button type=\"submit\"> Search </button>\n            </form>\n        </div>\n    );\n}\n\nconst initializeSet = () => {\n    //https://stackoverflow.com/questions/8877666/how-is-a-javascript-hash-map-implemented \n    //hash map ^\n    var map = {};\n    map[\"本\"] = \"木 'tree' , 一 'cut through'\";\n    // for(var i = 0; i < 200; i++){\n    //     //set up the hash set from kanji.txt\n    // }\n}\n\nconst helper = (formData, map) => {\n    const submit = formData.kanji;\n    //get from txt file \n    if(submit in map){\n        //call API on that kanji\n        console.log(map[submit]);\n        //print stuff to html\n    } \n    else{\n        console.log(\"Not in base set\");\n    }\n    //store in the cache  \n}\nexport default About;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGjD,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,IAAIC,GAAG,GAAG,CAAC,CAAC;EACZA,GAAG,CAAC,GAAG,CAAC,GAAG,4BAA4B;EAEvC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC;IACrCS,KAAK,EAAE;EACX,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAIC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEP,QAAQ,CAAC;IACxCQ,MAAM,CAACR,QAAQ,EAAED,GAAG,CAAC;EACzB,CAAC;EACD,oBACIH,OAAA;IAAKa,SAAS,EAAG,OAAO;IAAAC,QAAA,eACnBd,OAAA;MAAMe,QAAQ,EAAER,YAAa;MAAAO,QAAA,gBAC1Bd,OAAA;QAAOgB,OAAO,EAAC,YAAY;QAAAF,QAAA,EAAC;MAAe;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACnDpB,OAAA;QACIqB,IAAI,EAAC,MAAM;QACXC,EAAE,EAAC,YAAY;QACfC,KAAK,EAAEnB,QAAQ,CAACE,KAAM;QACtBkB,QAAQ,EAAGC,CAAC,IAAKpB,WAAW,CAAC;UAAEC,KAAK,EAAEmB,CAAC,CAACC,MAAM,CAACH;QAAM,CAAC;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3D,CAAC,eACFpB,OAAA;QAAQqB,IAAI,EAAC,QAAQ;QAAAP,QAAA,EAAC;MAAQ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAAAlB,EAAA,CA3BKD,KAAK;AAAA0B,EAAA,GAAL1B,KAAK;AA6BX,MAAM2B,aAAa,GAAGA,CAAA,KAAM;EACxB;EACA;EACA,IAAIzB,GAAG,GAAG,CAAC,CAAC;EACZA,GAAG,CAAC,GAAG,CAAC,GAAG,4BAA4B;EACvC;EACA;EACA;AACJ,CAAC;AAED,MAAMS,MAAM,GAAGA,CAACR,QAAQ,EAAED,GAAG,KAAK;EAC9B,MAAM0B,MAAM,GAAGzB,QAAQ,CAACE,KAAK;EAC7B;EACA,IAAGuB,MAAM,IAAI1B,GAAG,EAAC;IACb;IACAO,OAAO,CAACC,GAAG,CAACR,GAAG,CAAC0B,MAAM,CAAC,CAAC;IACxB;EACJ,CAAC,MACG;IACAnB,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;EAClC;EACA;AACJ,CAAC;AACD,eAAeV,KAAK;AAAC,IAAA0B,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}