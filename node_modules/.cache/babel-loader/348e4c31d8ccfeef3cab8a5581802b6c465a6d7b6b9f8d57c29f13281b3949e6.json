{"ast":null,"code":"var _jsxFileName = \"/Users/abbybellamy/Desktop/JWAD/dojo-blog/src/pages/Dictionary.js\";\n//import Header from '../components/Header';\nimport React, { useState, useEffect } from 'react';\n//import me from '../images/me.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dictionary = () => {\n  Search();\n  process();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dictonaryContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"body\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"output\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n_c = Dictionary;\nconst Search = () => {};\n_c2 = Search;\nconst process = async () => {\n  const url = 'https://kanjialive-api.p.rapidapi.com/api/public/kanji/'; //%E4%BC%91';\n  const uri = url.concat('木');\n  console.log(url);\n  //const encoded = encodeURI(url);\n\n  const options = {\n    method: 'GET',\n    headers: {\n      'X-RapidAPI-Key': '6a12f8c88cmsh830de894db5186bp10d491jsnfd2c65de1956',\n      'X-RapidAPI-Host': 'kanjialive-api.p.rapidapi.com'\n    }\n  };\n  try {\n    const response = await fetch(uri, options);\n    const result = await response.json();\n    var x = result.grade; //access into the json file \n\n    var outputElement = document.getElementById(\"output\");\n    var outputString = result.grade;\n    outputElement.innerHTML = outputString;\n    return x;\n    console.log(result); //this is checking the type of the result variable\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport default Dictionary;\nvar _c, _c2;\n$RefreshReg$(_c, \"Dictionary\");\n$RefreshReg$(_c2, \"Search\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Dictionary","Search","process","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","_c2","url","uri","concat","console","log","options","method","headers","response","fetch","result","json","x","grade","outputElement","document","getElementById","outputString","innerHTML","error","$RefreshReg$"],"sources":["/Users/abbybellamy/Desktop/JWAD/dojo-blog/src/pages/Dictionary.js"],"sourcesContent":["//import Header from '../components/Header';\nimport React, {useState, useEffect} from 'react';\n//import me from '../images/me.png';\n\n\nconst Dictionary = () => {\n    Search();\n    process();\n    return (    \n        <div className = \"dictonaryContainer\">\n            <body>\n                <div id=\"output\">\n\n                </div>\n            </body>\n        </div>\n    );\n}\n\nconst Search = () =>{\n\n}\n\nconst process = async() => {\n    const url = 'https://kanjialive-api.p.rapidapi.com/api/public/kanji/'; //%E4%BC%91';\n    const uri = url.concat('木');\n    console.log(url);\n    //const encoded = encodeURI(url);\n    \n\n    const options = {\n    method: 'GET',\n    headers: {\n        'X-RapidAPI-Key': '6a12f8c88cmsh830de894db5186bp10d491jsnfd2c65de1956',\n        'X-RapidAPI-Host': 'kanjialive-api.p.rapidapi.com'\n    }\n    };\n\n    try {\n        const response = await fetch(uri, options);\n        const result = await response.json();\n        var x = result.grade; //access into the json file \n\n        var outputElement = document.getElementById(\"output\");\n        var outputString = result.grade;\n        outputElement.innerHTML = outputString;\n        \n        return x;\n        console.log(result); //this is checking the type of the result variable\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nexport default Dictionary;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGA,MAAMC,UAAU,GAAGA,CAAA,KAAM;EACrBC,MAAM,CAAC,CAAC;EACRC,OAAO,CAAC,CAAC;EACT,oBACIH,OAAA;IAAKI,SAAS,EAAG,oBAAoB;IAAAC,QAAA,eACjCL,OAAA;MAAAK,QAAA,eACIL,OAAA;QAAKM,EAAE,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEX;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAAAC,EAAA,GAZKV,UAAU;AAchB,MAAMC,MAAM,GAAGA,CAAA,KAAK,CAEpB,CAAC;AAAAU,GAAA,GAFKV,MAAM;AAIZ,MAAMC,OAAO,GAAG,MAAAA,CAAA,KAAW;EACvB,MAAMU,GAAG,GAAG,yDAAyD,CAAC,CAAC;EACvE,MAAMC,GAAG,GAAGD,GAAG,CAACE,MAAM,CAAC,GAAG,CAAC;EAC3BC,OAAO,CAACC,GAAG,CAACJ,GAAG,CAAC;EAChB;;EAGA,MAAMK,OAAO,GAAG;IAChBC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACL,gBAAgB,EAAE,oDAAoD;MACtE,iBAAiB,EAAE;IACvB;EACA,CAAC;EAED,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACR,GAAG,EAAEI,OAAO,CAAC;IAC1C,MAAMK,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACpC,IAAIC,CAAC,GAAGF,MAAM,CAACG,KAAK,CAAC,CAAC;;IAEtB,IAAIC,aAAa,GAAGC,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAC;IACrD,IAAIC,YAAY,GAAGP,MAAM,CAACG,KAAK;IAC/BC,aAAa,CAACI,SAAS,GAAGD,YAAY;IAEtC,OAAOL,CAAC;IACRT,OAAO,CAACC,GAAG,CAACM,MAAM,CAAC,CAAC,CAAC;EACzB,CAAC,CAAC,OAAOS,KAAK,EAAE;IACZhB,OAAO,CAACgB,KAAK,CAACA,KAAK,CAAC;EACxB;AACJ,CAAC;AAED,eAAe/B,UAAU;AAAC,IAAAU,EAAA,EAAAC,GAAA;AAAAqB,YAAA,CAAAtB,EAAA;AAAAsB,YAAA,CAAArB,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}