{"ast":null,"code":"var _jsxFileName = \"/Users/abbybellamy/Desktop/JWAD/dojo-blog/src/pages/Dictionary.js\";\n//import Header from '../components/Header';\nimport React, { useState, useEffect } from 'react';\nimport me from '../images/me.png';\n\n//custom data class, like APIResult\n\n//kanji\n//translation\n//some other thing\n\n//function that waits for user input and reads it\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dictionary = () => {\n  //returns whatever data u need, ie translation\n  print(fun());\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dictonaryContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n_c = Dictionary;\nconst fun = async () => {\n  const url = 'https://kanjialive-api.p.rapidapi.com/api/public/kanji/%E4%BC%91';\n  const options = {\n    method: 'GET',\n    headers: {\n      'X-RapidAPI-Key': '6a12f8c88cmsh830de894db5186bp10d491jsnfd2c65de1956',\n      'X-RapidAPI-Host': 'kanjialive-api.p.rapidapi.com'\n    }\n  };\n  try {\n    const response = await fetch(url, options);\n    const result = await response.json();\n    var x = result.grade; //access into the json file \n    return x;\n    console.log(typeof result); //this is checking the type of the result variable\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport default Dictionary;\nvar _c;\n$RefreshReg$(_c, \"Dictionary\");","map":{"version":3,"names":["React","useState","useEffect","me","jsxDEV","_jsxDEV","Dictionary","print","fun","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","url","options","method","headers","response","fetch","result","json","x","grade","console","log","error","$RefreshReg$"],"sources":["/Users/abbybellamy/Desktop/JWAD/dojo-blog/src/pages/Dictionary.js"],"sourcesContent":["//import Header from '../components/Header';\nimport React, {useState, useEffect} from 'react';\nimport me from '../images/me.png';\n\n//custom data class, like APIResult\n\n//kanji\n//translation\n//some other thing\n\n\n//function that waits for user input and reads it\n\nconst Dictionary = () => {\n\n    //returns whatever data u need, ie translation\n    print(fun());\n    return (    \n        <div className = \"dictonaryContainer\">\n            <p></p>\n        </div>\n    );\n}\n\nconst fun = async() => {\n    const url = 'https://kanjialive-api.p.rapidapi.com/api/public/kanji/%E4%BC%91';\n    const options = {\n    method: 'GET',\n    headers: {\n        'X-RapidAPI-Key': '6a12f8c88cmsh830de894db5186bp10d491jsnfd2c65de1956',\n        'X-RapidAPI-Host': 'kanjialive-api.p.rapidapi.com'\n    }\n    };\n\n    try {\n        const response = await fetch(url, options);\n        const result = await response.json();\n        var x = result.grade; //access into the json file \n        return x;\n        console.log(typeof(result)); //this is checking the type of the result variable\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nexport default Dictionary;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,OAAOC,EAAE,MAAM,kBAAkB;;AAEjC;;AAEA;AACA;AACA;;AAGA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAErB;EACAC,KAAK,CAACC,GAAG,CAAC,CAAC,CAAC;EACZ,oBACIH,OAAA;IAAKI,SAAS,EAAG,oBAAoB;IAAAC,QAAA,eACjCL,OAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAAAC,EAAA,GATKT,UAAU;AAWhB,MAAME,GAAG,GAAG,MAAAA,CAAA,KAAW;EACnB,MAAMQ,GAAG,GAAG,kEAAkE;EAC9E,MAAMC,OAAO,GAAG;IAChBC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACL,gBAAgB,EAAE,oDAAoD;MACtE,iBAAiB,EAAE;IACvB;EACA,CAAC;EAED,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAG,EAAEC,OAAO,CAAC;IAC1C,MAAMK,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACpC,IAAIC,CAAC,GAAGF,MAAM,CAACG,KAAK,CAAC,CAAC;IACtB,OAAOD,CAAC;IACRE,OAAO,CAACC,GAAG,CAAC,OAAOL,MAAO,CAAC,CAAC,CAAC;EACjC,CAAC,CAAC,OAAOM,KAAK,EAAE;IACZF,OAAO,CAACE,KAAK,CAACA,KAAK,CAAC;EACxB;AACJ,CAAC;AAED,eAAetB,UAAU;AAAC,IAAAS,EAAA;AAAAc,YAAA,CAAAd,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}