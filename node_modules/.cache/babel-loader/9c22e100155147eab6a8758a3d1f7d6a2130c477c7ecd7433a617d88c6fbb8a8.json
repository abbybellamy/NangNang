{"ast":null,"code":"//import Header from '../components/Header';\nimport React,{useState}from'react';//Helpful link on hooks and calls https://stackoverflow.com/questions/34424845/adding-script-tag-to-react-jsx\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Dictionary=()=>{const[formData,setFormData]=useState({kanji:''});const handleSubmit=x=>{x.preventDefault();console.log('Form submitted:',formData);process(formData);};return/*#__PURE__*/_jsxs(\"div\",{className:\"dictionaryContainer\",children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"div\",{class:\"label\",children:\" Search Kanji : \"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"kanjiInput\",placeholder:\"\\u672C, \\u6642...\",value:formData.kanji,onChange:e=>setFormData({kanji:e.target.value})})]}),/*#__PURE__*/_jsx(\"div\",{id:\"outputKanji\"})]});};const process=async formData=>{const submit=formData.kanji;const options={method:'GET',headers:{'X-RapidAPI-Key':'6a12f8c88cmsh830de894db5186bp10d491jsnfd2c65de1956','X-RapidAPI-Host':'kanjialive-api.p.rapidapi.com'}};const url='https://kanjialive-api.p.rapidapi.com/api/public/kanji/';const uri=url.concat(submit);console.log(url);//const encoded = encodeURI(url);\ntry{const response=await fetch(uri,options);const result=await response.json();if(!response.ok){let outputElement=document.getElementById(\"output\");let err=\"Please type a valid character.\";outputElement.innerHTML=err;}else{let outputElement=document.getElementById(\"outputKanji\");let kanji=result.ka_utf;//kanji character\nlet on=result.onyomi_ja;//chinese reading\nlet kun=result.kunyomi_ka_display;// japanese reading\nlet examples=result.examples;//words that it is in \nlet related_words=\" \";//words that it is in \nlet defintion=result.kanji.meaning.english;//english meaning\n//let strokes = result.kanji.strokes;\n//let hint = result.mn_hint;\nlet rad=result.radical.character;let radMeaning=result.radical.meaning.english;console.log(defintion);for(let word in examples){//I am putting this if statement in because sometimes the \n//use cases of words would start like *kanji it was weird\n//again no documentation so IDK\nif(examples[word].japanese.substring(0,1)===\"*\"){//related_words += examples[word].japanese.substring(1);\n}else{related_words+=\"<br> \";related_words+=examples[word].japanese;related_words+=examples[word].meaning.english;}}//Some hints would have this message...maybe because some kanji are ONLY \n//a radical so I just made it so there is no hint -- may change later \n//console.log(hint.substring(0,6));\n// if(hint.substring(0,6) === \"Please\"){\n//     hint = \"No hint avaliable for this kanji.\";\n// }\nlet wordDes=\" \\n                <div id= \\\"kanji\\\">\".concat(kanji,\"</div>\\n                <p id= \\\"def\\\">  <b>Meaning:</b> \").concat(defintion,\"</p>\\n                <p id= \\\"on\\\"> <b>On reading:</b> \").concat(on,\"</p>\\n                <p id= \\\"kun\\\"> <b>Kun reading:</b> \").concat(kun,\"</p> \\n                <p id= \\\"relate\\\"> <b>Words with this character:</b> \").concat(related_words,\"</p>\\n                \");//template string\n// <p id= \"hint\"> Hint: ${hint}</p> \nconsole.log(wordDes);outputElement.innerHTML=wordDes;}}catch(error){console.error(error);let outputElement=document.getElementById(\"outputKanji\");outputElement.innerHTML=\"failed\";}};export default Dictionary;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","Dictionary","formData","setFormData","kanji","handleSubmit","x","preventDefault","console","log","process","className","children","onSubmit","class","type","id","placeholder","value","onChange","e","target","submit","options","method","headers","url","uri","concat","response","fetch","result","json","ok","outputElement","document","getElementById","err","innerHTML","ka_utf","on","onyomi_ja","kun","kunyomi_ka_display","examples","related_words","defintion","meaning","english","rad","radical","character","radMeaning","word","japanese","substring","wordDes","error"],"sources":["/Users/jadielrios/Downloads/NangNang/src/pages/Dictionary.js"],"sourcesContent":["//import Header from '../components/Header';\nimport React, {useState} from 'react';\n//Helpful link on hooks and calls https://stackoverflow.com/questions/34424845/adding-script-tag-to-react-jsx\n\n\nconst Dictionary = () => {\n    const [formData, setFormData] = useState({\n        kanji: ''\n    });\n    const handleSubmit = (x) => {\n        x.preventDefault();\n        console.log('Form submitted:', formData);\n        process(formData);\n    };\n    return (    \n        <div className=\"dictionaryContainer\">\n            <form onSubmit={handleSubmit}>\n                <div class=\"label\"> Search Kanji : </div>\n                <input\n                    type=\"text\"\n                    id=\"kanjiInput\"\n                    placeholder = \"本, 時...\"\n                    value={formData.kanji}\n                    onChange={(e) => setFormData({ kanji: e.target.value })}\n                />\n                {/* <button id = \"kanjiSubmit\" type=\"submit\" name = \"kanjiSubmit\"> \n                </button> */}\n            </form>\n            <div id=\"outputKanji\">\n            </div>\n        </div>\n    );\n}\n\nconst process = async(formData) => {\n    const submit = formData.kanji;\n    const options = {\n    method: 'GET',\n    headers: {\n        'X-RapidAPI-Key': '6a12f8c88cmsh830de894db5186bp10d491jsnfd2c65de1956',\n        'X-RapidAPI-Host': 'kanjialive-api.p.rapidapi.com'\n    }\n    };\n        const url = 'https://kanjialive-api.p.rapidapi.com/api/public/kanji/'; \n        const uri = url.concat(submit); \n        console.log(url); //const encoded = encodeURI(url);\n        try {\n            const response = await fetch(uri, options);\n            const result = await response.json();\n            if(!response.ok){\n                let outputElement = document.getElementById(\"output\");\n                let err = \"Please type a valid character.\"\n                outputElement.innerHTML = err;\n            }\n            else{\n\n                let outputElement = document.getElementById(\"outputKanji\");\n                let kanji = result.ka_utf; //kanji character\n                let on = result.onyomi_ja; //chinese reading\n                let kun = result.kunyomi_ka_display; // japanese reading\n                let examples = result.examples; //words that it is in \n                let related_words = \" \";//words that it is in \n                let defintion = result.kanji.meaning.english; //english meaning\n                //let strokes = result.kanji.strokes;\n                //let hint = result.mn_hint;\n                let rad = result.radical.character;\n                let radMeaning = result.radical.meaning.english;\n                console.log(defintion);\n\n                for (let word in examples){\n                    //I am putting this if statement in because sometimes the \n                    //use cases of words would start like *kanji it was weird\n                    //again no documentation so IDK\n                    if(examples[word].japanese.substring(0,1) === \"*\"){\n                        //related_words += examples[word].japanese.substring(1);\n                    }\n                    else{\n                        related_words += \"<br> \";\n                        related_words += examples[word].japanese;\n                        related_words += examples[word].meaning.english;\n                    }\n                }\n                //Some hints would have this message...maybe because some kanji are ONLY \n                //a radical so I just made it so there is no hint -- may change later \n               //console.log(hint.substring(0,6));\n                // if(hint.substring(0,6) === \"Please\"){\n                //     hint = \"No hint avaliable for this kanji.\";\n                // }\n                \n                let wordDes = ` \n                <div id= \"kanji\">${kanji}</div>\n                <p id= \"def\">  <b>Meaning:</b> ${defintion}</p>\n                <p id= \"on\"> <b>On reading:</b> ${on}</p>\n                <p id= \"kun\"> <b>Kun reading:</b> ${kun}</p> \n                <p id= \"relate\"> <b>Words with this character:</b> ${related_words}</p>\n                `; //template string\n                 // <p id= \"hint\"> Hint: ${hint}</p> \n                console.log(wordDes);\n                outputElement.innerHTML = wordDes;\n            }\n        }\n        catch (error) {\n            console.error(error);\n            let outputElement = document.getElementById(\"outputKanji\");\n            outputElement.innerHTML = \"failed\";\n        }\n}\n\nexport default Dictionary;\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAGC,QAAQ,KAAO,OAAO,CACrC;AAAA,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAGA,KAAM,CAAAC,UAAU,CAAGA,CAAA,GAAM,CACrB,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGP,QAAQ,CAAC,CACrCQ,KAAK,CAAE,EACX,CAAC,CAAC,CACF,KAAM,CAAAC,YAAY,CAAIC,CAAC,EAAK,CACxBA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClBC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAEP,QAAQ,CAAC,CACxCQ,OAAO,CAACR,QAAQ,CAAC,CACrB,CAAC,CACD,mBACIF,KAAA,QAAKW,SAAS,CAAC,qBAAqB,CAAAC,QAAA,eAChCZ,KAAA,SAAMa,QAAQ,CAAER,YAAa,CAAAO,QAAA,eACzBd,IAAA,QAAKgB,KAAK,CAAC,OAAO,CAAAF,QAAA,CAAC,kBAAgB,CAAK,CAAC,cACzCd,IAAA,UACIiB,IAAI,CAAC,MAAM,CACXC,EAAE,CAAC,YAAY,CACfC,WAAW,CAAG,mBAAS,CACvBC,KAAK,CAAEhB,QAAQ,CAACE,KAAM,CACtBe,QAAQ,CAAGC,CAAC,EAAKjB,WAAW,CAAC,CAAEC,KAAK,CAAEgB,CAAC,CAACC,MAAM,CAACH,KAAM,CAAC,CAAE,CAC3D,CAAC,EAGA,CAAC,cACPpB,IAAA,QAAKkB,EAAE,CAAC,aAAa,CAChB,CAAC,EACL,CAAC,CAEd,CAAC,CAED,KAAM,CAAAN,OAAO,CAAG,KAAM,CAAAR,QAAQ,EAAK,CAC/B,KAAM,CAAAoB,MAAM,CAAGpB,QAAQ,CAACE,KAAK,CAC7B,KAAM,CAAAmB,OAAO,CAAG,CAChBC,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACL,gBAAgB,CAAE,oDAAoD,CACtE,iBAAiB,CAAE,+BACvB,CACA,CAAC,CACG,KAAM,CAAAC,GAAG,CAAG,yDAAyD,CACrE,KAAM,CAAAC,GAAG,CAAGD,GAAG,CAACE,MAAM,CAACN,MAAM,CAAC,CAC9Bd,OAAO,CAACC,GAAG,CAACiB,GAAG,CAAC,CAAE;AAClB,GAAI,CACA,KAAM,CAAAG,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAACH,GAAG,CAAEJ,OAAO,CAAC,CAC1C,KAAM,CAAAQ,MAAM,CAAG,KAAM,CAAAF,QAAQ,CAACG,IAAI,CAAC,CAAC,CACpC,GAAG,CAACH,QAAQ,CAACI,EAAE,CAAC,CACZ,GAAI,CAAAC,aAAa,CAAGC,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAC,CACrD,GAAI,CAAAC,GAAG,CAAG,gCAAgC,CAC1CH,aAAa,CAACI,SAAS,CAAGD,GAAG,CACjC,CAAC,IACG,CAEA,GAAI,CAAAH,aAAa,CAAGC,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC,CAC1D,GAAI,CAAAhC,KAAK,CAAG2B,MAAM,CAACQ,MAAM,CAAE;AAC3B,GAAI,CAAAC,EAAE,CAAGT,MAAM,CAACU,SAAS,CAAE;AAC3B,GAAI,CAAAC,GAAG,CAAGX,MAAM,CAACY,kBAAkB,CAAE;AACrC,GAAI,CAAAC,QAAQ,CAAGb,MAAM,CAACa,QAAQ,CAAE;AAChC,GAAI,CAAAC,aAAa,CAAG,GAAG,CAAC;AACxB,GAAI,CAAAC,SAAS,CAAGf,MAAM,CAAC3B,KAAK,CAAC2C,OAAO,CAACC,OAAO,CAAE;AAC9C;AACA;AACA,GAAI,CAAAC,GAAG,CAAGlB,MAAM,CAACmB,OAAO,CAACC,SAAS,CAClC,GAAI,CAAAC,UAAU,CAAGrB,MAAM,CAACmB,OAAO,CAACH,OAAO,CAACC,OAAO,CAC/CxC,OAAO,CAACC,GAAG,CAACqC,SAAS,CAAC,CAEtB,IAAK,GAAI,CAAAO,IAAI,GAAI,CAAAT,QAAQ,CAAC,CACtB;AACA;AACA;AACA,GAAGA,QAAQ,CAACS,IAAI,CAAC,CAACC,QAAQ,CAACC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,GAAK,GAAG,CAAC,CAC9C;AAAA,CACH,IACG,CACAV,aAAa,EAAI,OAAO,CACxBA,aAAa,EAAID,QAAQ,CAACS,IAAI,CAAC,CAACC,QAAQ,CACxCT,aAAa,EAAID,QAAQ,CAACS,IAAI,CAAC,CAACN,OAAO,CAACC,OAAO,CACnD,CACJ,CACA;AACA;AACD;AACC;AACA;AACA;AAEA,GAAI,CAAAQ,OAAO,0CAAA5B,MAAA,CACQxB,KAAK,8DAAAwB,MAAA,CACSkB,SAAS,6DAAAlB,MAAA,CACRY,EAAE,+DAAAZ,MAAA,CACAc,GAAG,iFAAAd,MAAA,CACciB,aAAa,0BACjE,CAAE;AACF;AACDrC,OAAO,CAACC,GAAG,CAAC+C,OAAO,CAAC,CACpBtB,aAAa,CAACI,SAAS,CAAGkB,OAAO,CACrC,CACJ,CACA,MAAOC,KAAK,CAAE,CACVjD,OAAO,CAACiD,KAAK,CAACA,KAAK,CAAC,CACpB,GAAI,CAAAvB,aAAa,CAAGC,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC,CAC1DF,aAAa,CAACI,SAAS,CAAG,QAAQ,CACtC,CACR,CAAC,CAED,cAAe,CAAArC,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}